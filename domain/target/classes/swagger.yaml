swagger: "2.0"
info:
  description: " This is a Swagger documentation for a Java Spring api for the sorting of Minutes and Publications."
  version: "1.0.0"
  title: "Swagger Petstore"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:9000"
basePath: "/api/v1/classification"
tags:
- name: "auth"
  description: "EndPoint to user authentication and token generation."
- name: "ata"
  description: "Ata classification endpoint. Recive one or more documents and classify."
- name: "publicacao"
  description: "Publicação classification endpoint. Recive publication text and classify."
schemes:
- "https"
- "http"
paths:
  /auth:
    post:
      tags:
      - "auth"
      summary: "Authenticates the user and generates the token that will be used in the other requests."
      description: ""
      operationId: "authentication"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The user must be registered in the database."
        required: true
        schema:
          $ref: "#/definitions/Auth"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "OK"
      security:
      - petstore_auth:
        - "write:auth"
        - "read:auth"
        
  /ata:
    post:
      tags:
      - "ata"
      summary: "Classify ata file."
      description: ""
      operationId: "ata"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Ata file valid."
        required: true
        schema:
          $ref: "#/definitions/Ata"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "OK"
      security:
      - petstore_auth:
        - "write:auth"
        - "read:auth"
  /publicacao:
    post:
      tags:
      - "publicacao"
      summary: "Classify publication."
      description: ""
      operationId: "publicacao"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Must publicaction text."
        required: true
        schema:
          $ref: "#/definitions/Auth"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "OK"
      security:
      - petstore_auth:
        - "write:auth"
        - "read:auth"
securityDefinitions:
  petstore_auth:
    type: "JWT"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  login:
    type: "object"
    properties:
      username:
        type: "string"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"